
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `RecruitmentApplication` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/client"
import type * as $Enums from "../enums.ts"
import type * as Prisma from "../internal/prismaNamespace.ts"

/**
 * Model RecruitmentApplication
 * 
 */
export type RecruitmentApplicationModel = runtime.Types.Result.DefaultSelection<Prisma.$RecruitmentApplicationPayload>

export type AggregateRecruitmentApplication = {
  _count: RecruitmentApplicationCountAggregateOutputType | null
  _min: RecruitmentApplicationMinAggregateOutputType | null
  _max: RecruitmentApplicationMaxAggregateOutputType | null
}

export type RecruitmentApplicationMinAggregateOutputType = {
  id: string | null
  name: string | null
  email: string | null
  phoneNumber: string | null
  status: string | null
  message: string | null
  recruitmentId: string | null
  createdAt: Date | null
}

export type RecruitmentApplicationMaxAggregateOutputType = {
  id: string | null
  name: string | null
  email: string | null
  phoneNumber: string | null
  status: string | null
  message: string | null
  recruitmentId: string | null
  createdAt: Date | null
}

export type RecruitmentApplicationCountAggregateOutputType = {
  id: number
  name: number
  email: number
  phoneNumber: number
  status: number
  message: number
  uploadedFiles: number
  recruitmentId: number
  createdAt: number
  _all: number
}


export type RecruitmentApplicationMinAggregateInputType = {
  id?: true
  name?: true
  email?: true
  phoneNumber?: true
  status?: true
  message?: true
  recruitmentId?: true
  createdAt?: true
}

export type RecruitmentApplicationMaxAggregateInputType = {
  id?: true
  name?: true
  email?: true
  phoneNumber?: true
  status?: true
  message?: true
  recruitmentId?: true
  createdAt?: true
}

export type RecruitmentApplicationCountAggregateInputType = {
  id?: true
  name?: true
  email?: true
  phoneNumber?: true
  status?: true
  message?: true
  uploadedFiles?: true
  recruitmentId?: true
  createdAt?: true
  _all?: true
}

export type RecruitmentApplicationAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which RecruitmentApplication to aggregate.
   */
  where?: Prisma.RecruitmentApplicationWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of RecruitmentApplications to fetch.
   */
  orderBy?: Prisma.RecruitmentApplicationOrderByWithRelationInput | Prisma.RecruitmentApplicationOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.RecruitmentApplicationWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` RecruitmentApplications from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` RecruitmentApplications.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned RecruitmentApplications
  **/
  _count?: true | RecruitmentApplicationCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: RecruitmentApplicationMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: RecruitmentApplicationMaxAggregateInputType
}

export type GetRecruitmentApplicationAggregateType<T extends RecruitmentApplicationAggregateArgs> = {
      [P in keyof T & keyof AggregateRecruitmentApplication]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateRecruitmentApplication[P]>
    : Prisma.GetScalarType<T[P], AggregateRecruitmentApplication[P]>
}




export type RecruitmentApplicationGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.RecruitmentApplicationWhereInput
  orderBy?: Prisma.RecruitmentApplicationOrderByWithAggregationInput | Prisma.RecruitmentApplicationOrderByWithAggregationInput[]
  by: Prisma.RecruitmentApplicationScalarFieldEnum[] | Prisma.RecruitmentApplicationScalarFieldEnum
  having?: Prisma.RecruitmentApplicationScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: RecruitmentApplicationCountAggregateInputType | true
  _min?: RecruitmentApplicationMinAggregateInputType
  _max?: RecruitmentApplicationMaxAggregateInputType
}

export type RecruitmentApplicationGroupByOutputType = {
  id: string
  name: string
  email: string
  phoneNumber: string | null
  status: string | null
  message: string | null
  uploadedFiles: runtime.JsonValue
  recruitmentId: string
  createdAt: Date
  _count: RecruitmentApplicationCountAggregateOutputType | null
  _min: RecruitmentApplicationMinAggregateOutputType | null
  _max: RecruitmentApplicationMaxAggregateOutputType | null
}

type GetRecruitmentApplicationGroupByPayload<T extends RecruitmentApplicationGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<RecruitmentApplicationGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof RecruitmentApplicationGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], RecruitmentApplicationGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], RecruitmentApplicationGroupByOutputType[P]>
      }
    >
  >



export type RecruitmentApplicationWhereInput = {
  AND?: Prisma.RecruitmentApplicationWhereInput | Prisma.RecruitmentApplicationWhereInput[]
  OR?: Prisma.RecruitmentApplicationWhereInput[]
  NOT?: Prisma.RecruitmentApplicationWhereInput | Prisma.RecruitmentApplicationWhereInput[]
  id?: Prisma.StringFilter<"RecruitmentApplication"> | string
  name?: Prisma.StringFilter<"RecruitmentApplication"> | string
  email?: Prisma.StringFilter<"RecruitmentApplication"> | string
  phoneNumber?: Prisma.StringNullableFilter<"RecruitmentApplication"> | string | null
  status?: Prisma.StringNullableFilter<"RecruitmentApplication"> | string | null
  message?: Prisma.StringNullableFilter<"RecruitmentApplication"> | string | null
  uploadedFiles?: Prisma.JsonFilter<"RecruitmentApplication">
  recruitmentId?: Prisma.StringFilter<"RecruitmentApplication"> | string
  createdAt?: Prisma.DateTimeFilter<"RecruitmentApplication"> | Date | string
  recruitment?: Prisma.XOR<Prisma.RecruitmentScalarRelationFilter, Prisma.RecruitmentWhereInput>
}

export type RecruitmentApplicationOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  email?: Prisma.SortOrder
  phoneNumber?: Prisma.SortOrderInput | Prisma.SortOrder
  status?: Prisma.SortOrderInput | Prisma.SortOrder
  message?: Prisma.SortOrderInput | Prisma.SortOrder
  uploadedFiles?: Prisma.SortOrder
  recruitmentId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  recruitment?: Prisma.RecruitmentOrderByWithRelationInput
}

export type RecruitmentApplicationWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  phoneNumber?: string
  recruitmentId_email?: Prisma.RecruitmentApplicationRecruitmentIdEmailCompoundUniqueInput
  AND?: Prisma.RecruitmentApplicationWhereInput | Prisma.RecruitmentApplicationWhereInput[]
  OR?: Prisma.RecruitmentApplicationWhereInput[]
  NOT?: Prisma.RecruitmentApplicationWhereInput | Prisma.RecruitmentApplicationWhereInput[]
  name?: Prisma.StringFilter<"RecruitmentApplication"> | string
  email?: Prisma.StringFilter<"RecruitmentApplication"> | string
  status?: Prisma.StringNullableFilter<"RecruitmentApplication"> | string | null
  message?: Prisma.StringNullableFilter<"RecruitmentApplication"> | string | null
  uploadedFiles?: Prisma.JsonFilter<"RecruitmentApplication">
  recruitmentId?: Prisma.StringFilter<"RecruitmentApplication"> | string
  createdAt?: Prisma.DateTimeFilter<"RecruitmentApplication"> | Date | string
  recruitment?: Prisma.XOR<Prisma.RecruitmentScalarRelationFilter, Prisma.RecruitmentWhereInput>
}, "id" | "id" | "phoneNumber" | "recruitmentId_email">

export type RecruitmentApplicationOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  email?: Prisma.SortOrder
  phoneNumber?: Prisma.SortOrderInput | Prisma.SortOrder
  status?: Prisma.SortOrderInput | Prisma.SortOrder
  message?: Prisma.SortOrderInput | Prisma.SortOrder
  uploadedFiles?: Prisma.SortOrder
  recruitmentId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  _count?: Prisma.RecruitmentApplicationCountOrderByAggregateInput
  _max?: Prisma.RecruitmentApplicationMaxOrderByAggregateInput
  _min?: Prisma.RecruitmentApplicationMinOrderByAggregateInput
}

export type RecruitmentApplicationScalarWhereWithAggregatesInput = {
  AND?: Prisma.RecruitmentApplicationScalarWhereWithAggregatesInput | Prisma.RecruitmentApplicationScalarWhereWithAggregatesInput[]
  OR?: Prisma.RecruitmentApplicationScalarWhereWithAggregatesInput[]
  NOT?: Prisma.RecruitmentApplicationScalarWhereWithAggregatesInput | Prisma.RecruitmentApplicationScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"RecruitmentApplication"> | string
  name?: Prisma.StringWithAggregatesFilter<"RecruitmentApplication"> | string
  email?: Prisma.StringWithAggregatesFilter<"RecruitmentApplication"> | string
  phoneNumber?: Prisma.StringNullableWithAggregatesFilter<"RecruitmentApplication"> | string | null
  status?: Prisma.StringNullableWithAggregatesFilter<"RecruitmentApplication"> | string | null
  message?: Prisma.StringNullableWithAggregatesFilter<"RecruitmentApplication"> | string | null
  uploadedFiles?: Prisma.JsonWithAggregatesFilter<"RecruitmentApplication">
  recruitmentId?: Prisma.StringWithAggregatesFilter<"RecruitmentApplication"> | string
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"RecruitmentApplication"> | Date | string
}

export type RecruitmentApplicationCreateInput = {
  id?: string
  name: string
  email: string
  phoneNumber?: string | null
  status?: string | null
  message?: string | null
  uploadedFiles: Prisma.JsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
  recruitment: Prisma.RecruitmentCreateNestedOneWithoutApplicationsInput
}

export type RecruitmentApplicationUncheckedCreateInput = {
  id?: string
  name: string
  email: string
  phoneNumber?: string | null
  status?: string | null
  message?: string | null
  uploadedFiles: Prisma.JsonNullValueInput | runtime.InputJsonValue
  recruitmentId: string
  createdAt?: Date | string
}

export type RecruitmentApplicationUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  message?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  uploadedFiles?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  recruitment?: Prisma.RecruitmentUpdateOneRequiredWithoutApplicationsNestedInput
}

export type RecruitmentApplicationUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  message?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  uploadedFiles?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  recruitmentId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type RecruitmentApplicationCreateManyInput = {
  id?: string
  name: string
  email: string
  phoneNumber?: string | null
  status?: string | null
  message?: string | null
  uploadedFiles: Prisma.JsonNullValueInput | runtime.InputJsonValue
  recruitmentId: string
  createdAt?: Date | string
}

export type RecruitmentApplicationUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  message?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  uploadedFiles?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type RecruitmentApplicationUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  message?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  uploadedFiles?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  recruitmentId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type RecruitmentApplicationListRelationFilter = {
  every?: Prisma.RecruitmentApplicationWhereInput
  some?: Prisma.RecruitmentApplicationWhereInput
  none?: Prisma.RecruitmentApplicationWhereInput
}

export type RecruitmentApplicationOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type RecruitmentApplicationRecruitmentIdEmailCompoundUniqueInput = {
  recruitmentId: string
  email: string
}

export type RecruitmentApplicationCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  email?: Prisma.SortOrder
  phoneNumber?: Prisma.SortOrder
  status?: Prisma.SortOrder
  message?: Prisma.SortOrder
  uploadedFiles?: Prisma.SortOrder
  recruitmentId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
}

export type RecruitmentApplicationMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  email?: Prisma.SortOrder
  phoneNumber?: Prisma.SortOrder
  status?: Prisma.SortOrder
  message?: Prisma.SortOrder
  recruitmentId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
}

export type RecruitmentApplicationMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  email?: Prisma.SortOrder
  phoneNumber?: Prisma.SortOrder
  status?: Prisma.SortOrder
  message?: Prisma.SortOrder
  recruitmentId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
}

export type RecruitmentApplicationCreateNestedManyWithoutRecruitmentInput = {
  create?: Prisma.XOR<Prisma.RecruitmentApplicationCreateWithoutRecruitmentInput, Prisma.RecruitmentApplicationUncheckedCreateWithoutRecruitmentInput> | Prisma.RecruitmentApplicationCreateWithoutRecruitmentInput[] | Prisma.RecruitmentApplicationUncheckedCreateWithoutRecruitmentInput[]
  connectOrCreate?: Prisma.RecruitmentApplicationCreateOrConnectWithoutRecruitmentInput | Prisma.RecruitmentApplicationCreateOrConnectWithoutRecruitmentInput[]
  createMany?: Prisma.RecruitmentApplicationCreateManyRecruitmentInputEnvelope
  connect?: Prisma.RecruitmentApplicationWhereUniqueInput | Prisma.RecruitmentApplicationWhereUniqueInput[]
}

export type RecruitmentApplicationUncheckedCreateNestedManyWithoutRecruitmentInput = {
  create?: Prisma.XOR<Prisma.RecruitmentApplicationCreateWithoutRecruitmentInput, Prisma.RecruitmentApplicationUncheckedCreateWithoutRecruitmentInput> | Prisma.RecruitmentApplicationCreateWithoutRecruitmentInput[] | Prisma.RecruitmentApplicationUncheckedCreateWithoutRecruitmentInput[]
  connectOrCreate?: Prisma.RecruitmentApplicationCreateOrConnectWithoutRecruitmentInput | Prisma.RecruitmentApplicationCreateOrConnectWithoutRecruitmentInput[]
  createMany?: Prisma.RecruitmentApplicationCreateManyRecruitmentInputEnvelope
  connect?: Prisma.RecruitmentApplicationWhereUniqueInput | Prisma.RecruitmentApplicationWhereUniqueInput[]
}

export type RecruitmentApplicationUpdateManyWithoutRecruitmentNestedInput = {
  create?: Prisma.XOR<Prisma.RecruitmentApplicationCreateWithoutRecruitmentInput, Prisma.RecruitmentApplicationUncheckedCreateWithoutRecruitmentInput> | Prisma.RecruitmentApplicationCreateWithoutRecruitmentInput[] | Prisma.RecruitmentApplicationUncheckedCreateWithoutRecruitmentInput[]
  connectOrCreate?: Prisma.RecruitmentApplicationCreateOrConnectWithoutRecruitmentInput | Prisma.RecruitmentApplicationCreateOrConnectWithoutRecruitmentInput[]
  upsert?: Prisma.RecruitmentApplicationUpsertWithWhereUniqueWithoutRecruitmentInput | Prisma.RecruitmentApplicationUpsertWithWhereUniqueWithoutRecruitmentInput[]
  createMany?: Prisma.RecruitmentApplicationCreateManyRecruitmentInputEnvelope
  set?: Prisma.RecruitmentApplicationWhereUniqueInput | Prisma.RecruitmentApplicationWhereUniqueInput[]
  disconnect?: Prisma.RecruitmentApplicationWhereUniqueInput | Prisma.RecruitmentApplicationWhereUniqueInput[]
  delete?: Prisma.RecruitmentApplicationWhereUniqueInput | Prisma.RecruitmentApplicationWhereUniqueInput[]
  connect?: Prisma.RecruitmentApplicationWhereUniqueInput | Prisma.RecruitmentApplicationWhereUniqueInput[]
  update?: Prisma.RecruitmentApplicationUpdateWithWhereUniqueWithoutRecruitmentInput | Prisma.RecruitmentApplicationUpdateWithWhereUniqueWithoutRecruitmentInput[]
  updateMany?: Prisma.RecruitmentApplicationUpdateManyWithWhereWithoutRecruitmentInput | Prisma.RecruitmentApplicationUpdateManyWithWhereWithoutRecruitmentInput[]
  deleteMany?: Prisma.RecruitmentApplicationScalarWhereInput | Prisma.RecruitmentApplicationScalarWhereInput[]
}

export type RecruitmentApplicationUncheckedUpdateManyWithoutRecruitmentNestedInput = {
  create?: Prisma.XOR<Prisma.RecruitmentApplicationCreateWithoutRecruitmentInput, Prisma.RecruitmentApplicationUncheckedCreateWithoutRecruitmentInput> | Prisma.RecruitmentApplicationCreateWithoutRecruitmentInput[] | Prisma.RecruitmentApplicationUncheckedCreateWithoutRecruitmentInput[]
  connectOrCreate?: Prisma.RecruitmentApplicationCreateOrConnectWithoutRecruitmentInput | Prisma.RecruitmentApplicationCreateOrConnectWithoutRecruitmentInput[]
  upsert?: Prisma.RecruitmentApplicationUpsertWithWhereUniqueWithoutRecruitmentInput | Prisma.RecruitmentApplicationUpsertWithWhereUniqueWithoutRecruitmentInput[]
  createMany?: Prisma.RecruitmentApplicationCreateManyRecruitmentInputEnvelope
  set?: Prisma.RecruitmentApplicationWhereUniqueInput | Prisma.RecruitmentApplicationWhereUniqueInput[]
  disconnect?: Prisma.RecruitmentApplicationWhereUniqueInput | Prisma.RecruitmentApplicationWhereUniqueInput[]
  delete?: Prisma.RecruitmentApplicationWhereUniqueInput | Prisma.RecruitmentApplicationWhereUniqueInput[]
  connect?: Prisma.RecruitmentApplicationWhereUniqueInput | Prisma.RecruitmentApplicationWhereUniqueInput[]
  update?: Prisma.RecruitmentApplicationUpdateWithWhereUniqueWithoutRecruitmentInput | Prisma.RecruitmentApplicationUpdateWithWhereUniqueWithoutRecruitmentInput[]
  updateMany?: Prisma.RecruitmentApplicationUpdateManyWithWhereWithoutRecruitmentInput | Prisma.RecruitmentApplicationUpdateManyWithWhereWithoutRecruitmentInput[]
  deleteMany?: Prisma.RecruitmentApplicationScalarWhereInput | Prisma.RecruitmentApplicationScalarWhereInput[]
}

export type RecruitmentApplicationCreateWithoutRecruitmentInput = {
  id?: string
  name: string
  email: string
  phoneNumber?: string | null
  status?: string | null
  message?: string | null
  uploadedFiles: Prisma.JsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
}

export type RecruitmentApplicationUncheckedCreateWithoutRecruitmentInput = {
  id?: string
  name: string
  email: string
  phoneNumber?: string | null
  status?: string | null
  message?: string | null
  uploadedFiles: Prisma.JsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
}

export type RecruitmentApplicationCreateOrConnectWithoutRecruitmentInput = {
  where: Prisma.RecruitmentApplicationWhereUniqueInput
  create: Prisma.XOR<Prisma.RecruitmentApplicationCreateWithoutRecruitmentInput, Prisma.RecruitmentApplicationUncheckedCreateWithoutRecruitmentInput>
}

export type RecruitmentApplicationCreateManyRecruitmentInputEnvelope = {
  data: Prisma.RecruitmentApplicationCreateManyRecruitmentInput | Prisma.RecruitmentApplicationCreateManyRecruitmentInput[]
  skipDuplicates?: boolean
}

export type RecruitmentApplicationUpsertWithWhereUniqueWithoutRecruitmentInput = {
  where: Prisma.RecruitmentApplicationWhereUniqueInput
  update: Prisma.XOR<Prisma.RecruitmentApplicationUpdateWithoutRecruitmentInput, Prisma.RecruitmentApplicationUncheckedUpdateWithoutRecruitmentInput>
  create: Prisma.XOR<Prisma.RecruitmentApplicationCreateWithoutRecruitmentInput, Prisma.RecruitmentApplicationUncheckedCreateWithoutRecruitmentInput>
}

export type RecruitmentApplicationUpdateWithWhereUniqueWithoutRecruitmentInput = {
  where: Prisma.RecruitmentApplicationWhereUniqueInput
  data: Prisma.XOR<Prisma.RecruitmentApplicationUpdateWithoutRecruitmentInput, Prisma.RecruitmentApplicationUncheckedUpdateWithoutRecruitmentInput>
}

export type RecruitmentApplicationUpdateManyWithWhereWithoutRecruitmentInput = {
  where: Prisma.RecruitmentApplicationScalarWhereInput
  data: Prisma.XOR<Prisma.RecruitmentApplicationUpdateManyMutationInput, Prisma.RecruitmentApplicationUncheckedUpdateManyWithoutRecruitmentInput>
}

export type RecruitmentApplicationScalarWhereInput = {
  AND?: Prisma.RecruitmentApplicationScalarWhereInput | Prisma.RecruitmentApplicationScalarWhereInput[]
  OR?: Prisma.RecruitmentApplicationScalarWhereInput[]
  NOT?: Prisma.RecruitmentApplicationScalarWhereInput | Prisma.RecruitmentApplicationScalarWhereInput[]
  id?: Prisma.StringFilter<"RecruitmentApplication"> | string
  name?: Prisma.StringFilter<"RecruitmentApplication"> | string
  email?: Prisma.StringFilter<"RecruitmentApplication"> | string
  phoneNumber?: Prisma.StringNullableFilter<"RecruitmentApplication"> | string | null
  status?: Prisma.StringNullableFilter<"RecruitmentApplication"> | string | null
  message?: Prisma.StringNullableFilter<"RecruitmentApplication"> | string | null
  uploadedFiles?: Prisma.JsonFilter<"RecruitmentApplication">
  recruitmentId?: Prisma.StringFilter<"RecruitmentApplication"> | string
  createdAt?: Prisma.DateTimeFilter<"RecruitmentApplication"> | Date | string
}

export type RecruitmentApplicationCreateManyRecruitmentInput = {
  id?: string
  name: string
  email: string
  phoneNumber?: string | null
  status?: string | null
  message?: string | null
  uploadedFiles: Prisma.JsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
}

export type RecruitmentApplicationUpdateWithoutRecruitmentInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  message?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  uploadedFiles?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type RecruitmentApplicationUncheckedUpdateWithoutRecruitmentInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  message?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  uploadedFiles?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type RecruitmentApplicationUncheckedUpdateManyWithoutRecruitmentInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  message?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  uploadedFiles?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}



export type RecruitmentApplicationSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  name?: boolean
  email?: boolean
  phoneNumber?: boolean
  status?: boolean
  message?: boolean
  uploadedFiles?: boolean
  recruitmentId?: boolean
  createdAt?: boolean
  recruitment?: boolean | Prisma.RecruitmentDefaultArgs<ExtArgs>
}, ExtArgs["result"]["recruitmentApplication"]>

export type RecruitmentApplicationSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  name?: boolean
  email?: boolean
  phoneNumber?: boolean
  status?: boolean
  message?: boolean
  uploadedFiles?: boolean
  recruitmentId?: boolean
  createdAt?: boolean
  recruitment?: boolean | Prisma.RecruitmentDefaultArgs<ExtArgs>
}, ExtArgs["result"]["recruitmentApplication"]>

export type RecruitmentApplicationSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  name?: boolean
  email?: boolean
  phoneNumber?: boolean
  status?: boolean
  message?: boolean
  uploadedFiles?: boolean
  recruitmentId?: boolean
  createdAt?: boolean
  recruitment?: boolean | Prisma.RecruitmentDefaultArgs<ExtArgs>
}, ExtArgs["result"]["recruitmentApplication"]>

export type RecruitmentApplicationSelectScalar = {
  id?: boolean
  name?: boolean
  email?: boolean
  phoneNumber?: boolean
  status?: boolean
  message?: boolean
  uploadedFiles?: boolean
  recruitmentId?: boolean
  createdAt?: boolean
}

export type RecruitmentApplicationOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "name" | "email" | "phoneNumber" | "status" | "message" | "uploadedFiles" | "recruitmentId" | "createdAt", ExtArgs["result"]["recruitmentApplication"]>
export type RecruitmentApplicationInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  recruitment?: boolean | Prisma.RecruitmentDefaultArgs<ExtArgs>
}
export type RecruitmentApplicationIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  recruitment?: boolean | Prisma.RecruitmentDefaultArgs<ExtArgs>
}
export type RecruitmentApplicationIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  recruitment?: boolean | Prisma.RecruitmentDefaultArgs<ExtArgs>
}

export type $RecruitmentApplicationPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "RecruitmentApplication"
  objects: {
    recruitment: Prisma.$RecruitmentPayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    name: string
    email: string
    phoneNumber: string | null
    status: string | null
    message: string | null
    uploadedFiles: runtime.JsonValue
    recruitmentId: string
    createdAt: Date
  }, ExtArgs["result"]["recruitmentApplication"]>
  composites: {}
}

export type RecruitmentApplicationGetPayload<S extends boolean | null | undefined | RecruitmentApplicationDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$RecruitmentApplicationPayload, S>

export type RecruitmentApplicationCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<RecruitmentApplicationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: RecruitmentApplicationCountAggregateInputType | true
  }

export interface RecruitmentApplicationDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['RecruitmentApplication'], meta: { name: 'RecruitmentApplication' } }
  /**
   * Find zero or one RecruitmentApplication that matches the filter.
   * @param {RecruitmentApplicationFindUniqueArgs} args - Arguments to find a RecruitmentApplication
   * @example
   * // Get one RecruitmentApplication
   * const recruitmentApplication = await prisma.recruitmentApplication.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends RecruitmentApplicationFindUniqueArgs>(args: Prisma.SelectSubset<T, RecruitmentApplicationFindUniqueArgs<ExtArgs>>): Prisma.Prisma__RecruitmentApplicationClient<runtime.Types.Result.GetResult<Prisma.$RecruitmentApplicationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one RecruitmentApplication that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {RecruitmentApplicationFindUniqueOrThrowArgs} args - Arguments to find a RecruitmentApplication
   * @example
   * // Get one RecruitmentApplication
   * const recruitmentApplication = await prisma.recruitmentApplication.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends RecruitmentApplicationFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, RecruitmentApplicationFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__RecruitmentApplicationClient<runtime.Types.Result.GetResult<Prisma.$RecruitmentApplicationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first RecruitmentApplication that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {RecruitmentApplicationFindFirstArgs} args - Arguments to find a RecruitmentApplication
   * @example
   * // Get one RecruitmentApplication
   * const recruitmentApplication = await prisma.recruitmentApplication.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends RecruitmentApplicationFindFirstArgs>(args?: Prisma.SelectSubset<T, RecruitmentApplicationFindFirstArgs<ExtArgs>>): Prisma.Prisma__RecruitmentApplicationClient<runtime.Types.Result.GetResult<Prisma.$RecruitmentApplicationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first RecruitmentApplication that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {RecruitmentApplicationFindFirstOrThrowArgs} args - Arguments to find a RecruitmentApplication
   * @example
   * // Get one RecruitmentApplication
   * const recruitmentApplication = await prisma.recruitmentApplication.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends RecruitmentApplicationFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, RecruitmentApplicationFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__RecruitmentApplicationClient<runtime.Types.Result.GetResult<Prisma.$RecruitmentApplicationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more RecruitmentApplications that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {RecruitmentApplicationFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all RecruitmentApplications
   * const recruitmentApplications = await prisma.recruitmentApplication.findMany()
   * 
   * // Get first 10 RecruitmentApplications
   * const recruitmentApplications = await prisma.recruitmentApplication.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const recruitmentApplicationWithIdOnly = await prisma.recruitmentApplication.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends RecruitmentApplicationFindManyArgs>(args?: Prisma.SelectSubset<T, RecruitmentApplicationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$RecruitmentApplicationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a RecruitmentApplication.
   * @param {RecruitmentApplicationCreateArgs} args - Arguments to create a RecruitmentApplication.
   * @example
   * // Create one RecruitmentApplication
   * const RecruitmentApplication = await prisma.recruitmentApplication.create({
   *   data: {
   *     // ... data to create a RecruitmentApplication
   *   }
   * })
   * 
   */
  create<T extends RecruitmentApplicationCreateArgs>(args: Prisma.SelectSubset<T, RecruitmentApplicationCreateArgs<ExtArgs>>): Prisma.Prisma__RecruitmentApplicationClient<runtime.Types.Result.GetResult<Prisma.$RecruitmentApplicationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many RecruitmentApplications.
   * @param {RecruitmentApplicationCreateManyArgs} args - Arguments to create many RecruitmentApplications.
   * @example
   * // Create many RecruitmentApplications
   * const recruitmentApplication = await prisma.recruitmentApplication.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends RecruitmentApplicationCreateManyArgs>(args?: Prisma.SelectSubset<T, RecruitmentApplicationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many RecruitmentApplications and returns the data saved in the database.
   * @param {RecruitmentApplicationCreateManyAndReturnArgs} args - Arguments to create many RecruitmentApplications.
   * @example
   * // Create many RecruitmentApplications
   * const recruitmentApplication = await prisma.recruitmentApplication.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many RecruitmentApplications and only return the `id`
   * const recruitmentApplicationWithIdOnly = await prisma.recruitmentApplication.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends RecruitmentApplicationCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, RecruitmentApplicationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$RecruitmentApplicationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a RecruitmentApplication.
   * @param {RecruitmentApplicationDeleteArgs} args - Arguments to delete one RecruitmentApplication.
   * @example
   * // Delete one RecruitmentApplication
   * const RecruitmentApplication = await prisma.recruitmentApplication.delete({
   *   where: {
   *     // ... filter to delete one RecruitmentApplication
   *   }
   * })
   * 
   */
  delete<T extends RecruitmentApplicationDeleteArgs>(args: Prisma.SelectSubset<T, RecruitmentApplicationDeleteArgs<ExtArgs>>): Prisma.Prisma__RecruitmentApplicationClient<runtime.Types.Result.GetResult<Prisma.$RecruitmentApplicationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one RecruitmentApplication.
   * @param {RecruitmentApplicationUpdateArgs} args - Arguments to update one RecruitmentApplication.
   * @example
   * // Update one RecruitmentApplication
   * const recruitmentApplication = await prisma.recruitmentApplication.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends RecruitmentApplicationUpdateArgs>(args: Prisma.SelectSubset<T, RecruitmentApplicationUpdateArgs<ExtArgs>>): Prisma.Prisma__RecruitmentApplicationClient<runtime.Types.Result.GetResult<Prisma.$RecruitmentApplicationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more RecruitmentApplications.
   * @param {RecruitmentApplicationDeleteManyArgs} args - Arguments to filter RecruitmentApplications to delete.
   * @example
   * // Delete a few RecruitmentApplications
   * const { count } = await prisma.recruitmentApplication.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends RecruitmentApplicationDeleteManyArgs>(args?: Prisma.SelectSubset<T, RecruitmentApplicationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more RecruitmentApplications.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {RecruitmentApplicationUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many RecruitmentApplications
   * const recruitmentApplication = await prisma.recruitmentApplication.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends RecruitmentApplicationUpdateManyArgs>(args: Prisma.SelectSubset<T, RecruitmentApplicationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more RecruitmentApplications and returns the data updated in the database.
   * @param {RecruitmentApplicationUpdateManyAndReturnArgs} args - Arguments to update many RecruitmentApplications.
   * @example
   * // Update many RecruitmentApplications
   * const recruitmentApplication = await prisma.recruitmentApplication.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more RecruitmentApplications and only return the `id`
   * const recruitmentApplicationWithIdOnly = await prisma.recruitmentApplication.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends RecruitmentApplicationUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, RecruitmentApplicationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$RecruitmentApplicationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one RecruitmentApplication.
   * @param {RecruitmentApplicationUpsertArgs} args - Arguments to update or create a RecruitmentApplication.
   * @example
   * // Update or create a RecruitmentApplication
   * const recruitmentApplication = await prisma.recruitmentApplication.upsert({
   *   create: {
   *     // ... data to create a RecruitmentApplication
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the RecruitmentApplication we want to update
   *   }
   * })
   */
  upsert<T extends RecruitmentApplicationUpsertArgs>(args: Prisma.SelectSubset<T, RecruitmentApplicationUpsertArgs<ExtArgs>>): Prisma.Prisma__RecruitmentApplicationClient<runtime.Types.Result.GetResult<Prisma.$RecruitmentApplicationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of RecruitmentApplications.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {RecruitmentApplicationCountArgs} args - Arguments to filter RecruitmentApplications to count.
   * @example
   * // Count the number of RecruitmentApplications
   * const count = await prisma.recruitmentApplication.count({
   *   where: {
   *     // ... the filter for the RecruitmentApplications we want to count
   *   }
   * })
  **/
  count<T extends RecruitmentApplicationCountArgs>(
    args?: Prisma.Subset<T, RecruitmentApplicationCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], RecruitmentApplicationCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a RecruitmentApplication.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {RecruitmentApplicationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends RecruitmentApplicationAggregateArgs>(args: Prisma.Subset<T, RecruitmentApplicationAggregateArgs>): Prisma.PrismaPromise<GetRecruitmentApplicationAggregateType<T>>

  /**
   * Group by RecruitmentApplication.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {RecruitmentApplicationGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends RecruitmentApplicationGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: RecruitmentApplicationGroupByArgs['orderBy'] }
      : { orderBy?: RecruitmentApplicationGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, RecruitmentApplicationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRecruitmentApplicationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the RecruitmentApplication model
 */
readonly fields: RecruitmentApplicationFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for RecruitmentApplication.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__RecruitmentApplicationClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  recruitment<T extends Prisma.RecruitmentDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.RecruitmentDefaultArgs<ExtArgs>>): Prisma.Prisma__RecruitmentClient<runtime.Types.Result.GetResult<Prisma.$RecruitmentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the RecruitmentApplication model
 */
export interface RecruitmentApplicationFieldRefs {
  readonly id: Prisma.FieldRef<"RecruitmentApplication", 'String'>
  readonly name: Prisma.FieldRef<"RecruitmentApplication", 'String'>
  readonly email: Prisma.FieldRef<"RecruitmentApplication", 'String'>
  readonly phoneNumber: Prisma.FieldRef<"RecruitmentApplication", 'String'>
  readonly status: Prisma.FieldRef<"RecruitmentApplication", 'String'>
  readonly message: Prisma.FieldRef<"RecruitmentApplication", 'String'>
  readonly uploadedFiles: Prisma.FieldRef<"RecruitmentApplication", 'Json'>
  readonly recruitmentId: Prisma.FieldRef<"RecruitmentApplication", 'String'>
  readonly createdAt: Prisma.FieldRef<"RecruitmentApplication", 'DateTime'>
}
    

// Custom InputTypes
/**
 * RecruitmentApplication findUnique
 */
export type RecruitmentApplicationFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the RecruitmentApplication
   */
  select?: Prisma.RecruitmentApplicationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the RecruitmentApplication
   */
  omit?: Prisma.RecruitmentApplicationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.RecruitmentApplicationInclude<ExtArgs> | null
  /**
   * Filter, which RecruitmentApplication to fetch.
   */
  where: Prisma.RecruitmentApplicationWhereUniqueInput
}

/**
 * RecruitmentApplication findUniqueOrThrow
 */
export type RecruitmentApplicationFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the RecruitmentApplication
   */
  select?: Prisma.RecruitmentApplicationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the RecruitmentApplication
   */
  omit?: Prisma.RecruitmentApplicationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.RecruitmentApplicationInclude<ExtArgs> | null
  /**
   * Filter, which RecruitmentApplication to fetch.
   */
  where: Prisma.RecruitmentApplicationWhereUniqueInput
}

/**
 * RecruitmentApplication findFirst
 */
export type RecruitmentApplicationFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the RecruitmentApplication
   */
  select?: Prisma.RecruitmentApplicationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the RecruitmentApplication
   */
  omit?: Prisma.RecruitmentApplicationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.RecruitmentApplicationInclude<ExtArgs> | null
  /**
   * Filter, which RecruitmentApplication to fetch.
   */
  where?: Prisma.RecruitmentApplicationWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of RecruitmentApplications to fetch.
   */
  orderBy?: Prisma.RecruitmentApplicationOrderByWithRelationInput | Prisma.RecruitmentApplicationOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for RecruitmentApplications.
   */
  cursor?: Prisma.RecruitmentApplicationWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` RecruitmentApplications from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` RecruitmentApplications.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of RecruitmentApplications.
   */
  distinct?: Prisma.RecruitmentApplicationScalarFieldEnum | Prisma.RecruitmentApplicationScalarFieldEnum[]
}

/**
 * RecruitmentApplication findFirstOrThrow
 */
export type RecruitmentApplicationFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the RecruitmentApplication
   */
  select?: Prisma.RecruitmentApplicationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the RecruitmentApplication
   */
  omit?: Prisma.RecruitmentApplicationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.RecruitmentApplicationInclude<ExtArgs> | null
  /**
   * Filter, which RecruitmentApplication to fetch.
   */
  where?: Prisma.RecruitmentApplicationWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of RecruitmentApplications to fetch.
   */
  orderBy?: Prisma.RecruitmentApplicationOrderByWithRelationInput | Prisma.RecruitmentApplicationOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for RecruitmentApplications.
   */
  cursor?: Prisma.RecruitmentApplicationWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` RecruitmentApplications from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` RecruitmentApplications.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of RecruitmentApplications.
   */
  distinct?: Prisma.RecruitmentApplicationScalarFieldEnum | Prisma.RecruitmentApplicationScalarFieldEnum[]
}

/**
 * RecruitmentApplication findMany
 */
export type RecruitmentApplicationFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the RecruitmentApplication
   */
  select?: Prisma.RecruitmentApplicationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the RecruitmentApplication
   */
  omit?: Prisma.RecruitmentApplicationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.RecruitmentApplicationInclude<ExtArgs> | null
  /**
   * Filter, which RecruitmentApplications to fetch.
   */
  where?: Prisma.RecruitmentApplicationWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of RecruitmentApplications to fetch.
   */
  orderBy?: Prisma.RecruitmentApplicationOrderByWithRelationInput | Prisma.RecruitmentApplicationOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing RecruitmentApplications.
   */
  cursor?: Prisma.RecruitmentApplicationWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` RecruitmentApplications from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` RecruitmentApplications.
   */
  skip?: number
  distinct?: Prisma.RecruitmentApplicationScalarFieldEnum | Prisma.RecruitmentApplicationScalarFieldEnum[]
}

/**
 * RecruitmentApplication create
 */
export type RecruitmentApplicationCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the RecruitmentApplication
   */
  select?: Prisma.RecruitmentApplicationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the RecruitmentApplication
   */
  omit?: Prisma.RecruitmentApplicationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.RecruitmentApplicationInclude<ExtArgs> | null
  /**
   * The data needed to create a RecruitmentApplication.
   */
  data: Prisma.XOR<Prisma.RecruitmentApplicationCreateInput, Prisma.RecruitmentApplicationUncheckedCreateInput>
}

/**
 * RecruitmentApplication createMany
 */
export type RecruitmentApplicationCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many RecruitmentApplications.
   */
  data: Prisma.RecruitmentApplicationCreateManyInput | Prisma.RecruitmentApplicationCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * RecruitmentApplication createManyAndReturn
 */
export type RecruitmentApplicationCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the RecruitmentApplication
   */
  select?: Prisma.RecruitmentApplicationSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the RecruitmentApplication
   */
  omit?: Prisma.RecruitmentApplicationOmit<ExtArgs> | null
  /**
   * The data used to create many RecruitmentApplications.
   */
  data: Prisma.RecruitmentApplicationCreateManyInput | Prisma.RecruitmentApplicationCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.RecruitmentApplicationIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * RecruitmentApplication update
 */
export type RecruitmentApplicationUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the RecruitmentApplication
   */
  select?: Prisma.RecruitmentApplicationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the RecruitmentApplication
   */
  omit?: Prisma.RecruitmentApplicationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.RecruitmentApplicationInclude<ExtArgs> | null
  /**
   * The data needed to update a RecruitmentApplication.
   */
  data: Prisma.XOR<Prisma.RecruitmentApplicationUpdateInput, Prisma.RecruitmentApplicationUncheckedUpdateInput>
  /**
   * Choose, which RecruitmentApplication to update.
   */
  where: Prisma.RecruitmentApplicationWhereUniqueInput
}

/**
 * RecruitmentApplication updateMany
 */
export type RecruitmentApplicationUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update RecruitmentApplications.
   */
  data: Prisma.XOR<Prisma.RecruitmentApplicationUpdateManyMutationInput, Prisma.RecruitmentApplicationUncheckedUpdateManyInput>
  /**
   * Filter which RecruitmentApplications to update
   */
  where?: Prisma.RecruitmentApplicationWhereInput
  /**
   * Limit how many RecruitmentApplications to update.
   */
  limit?: number
}

/**
 * RecruitmentApplication updateManyAndReturn
 */
export type RecruitmentApplicationUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the RecruitmentApplication
   */
  select?: Prisma.RecruitmentApplicationSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the RecruitmentApplication
   */
  omit?: Prisma.RecruitmentApplicationOmit<ExtArgs> | null
  /**
   * The data used to update RecruitmentApplications.
   */
  data: Prisma.XOR<Prisma.RecruitmentApplicationUpdateManyMutationInput, Prisma.RecruitmentApplicationUncheckedUpdateManyInput>
  /**
   * Filter which RecruitmentApplications to update
   */
  where?: Prisma.RecruitmentApplicationWhereInput
  /**
   * Limit how many RecruitmentApplications to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.RecruitmentApplicationIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * RecruitmentApplication upsert
 */
export type RecruitmentApplicationUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the RecruitmentApplication
   */
  select?: Prisma.RecruitmentApplicationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the RecruitmentApplication
   */
  omit?: Prisma.RecruitmentApplicationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.RecruitmentApplicationInclude<ExtArgs> | null
  /**
   * The filter to search for the RecruitmentApplication to update in case it exists.
   */
  where: Prisma.RecruitmentApplicationWhereUniqueInput
  /**
   * In case the RecruitmentApplication found by the `where` argument doesn't exist, create a new RecruitmentApplication with this data.
   */
  create: Prisma.XOR<Prisma.RecruitmentApplicationCreateInput, Prisma.RecruitmentApplicationUncheckedCreateInput>
  /**
   * In case the RecruitmentApplication was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.RecruitmentApplicationUpdateInput, Prisma.RecruitmentApplicationUncheckedUpdateInput>
}

/**
 * RecruitmentApplication delete
 */
export type RecruitmentApplicationDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the RecruitmentApplication
   */
  select?: Prisma.RecruitmentApplicationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the RecruitmentApplication
   */
  omit?: Prisma.RecruitmentApplicationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.RecruitmentApplicationInclude<ExtArgs> | null
  /**
   * Filter which RecruitmentApplication to delete.
   */
  where: Prisma.RecruitmentApplicationWhereUniqueInput
}

/**
 * RecruitmentApplication deleteMany
 */
export type RecruitmentApplicationDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which RecruitmentApplications to delete
   */
  where?: Prisma.RecruitmentApplicationWhereInput
  /**
   * Limit how many RecruitmentApplications to delete.
   */
  limit?: number
}

/**
 * RecruitmentApplication without action
 */
export type RecruitmentApplicationDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the RecruitmentApplication
   */
  select?: Prisma.RecruitmentApplicationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the RecruitmentApplication
   */
  omit?: Prisma.RecruitmentApplicationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.RecruitmentApplicationInclude<ExtArgs> | null
}
